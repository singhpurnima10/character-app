{"ast":null,"code":"var _jsxFileName = \"/Users/pk/purnima-reactp/src/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { addUser } from './redux/action';\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Learn React\"), React.createElement(\"button\", {\n    onClick: props.user1(\"helooooooooooo\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"click me\")));\n}\n\nconst mapStateToProps = state => {\n  const users = state.userDataReducer;\n  return users;\n};\n\nconst mapDispatchToProps = dispatch => {\n  user1: () => dispatch(addUser());\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps(App));","map":{"version":3,"sources":["/Users/pk/purnima-reactp/src/App.js"],"names":["React","connect","bindActionCreators","addUser","App","props","logo","user1","mapStateToProps","state","users","userDataReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,EAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAaE;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACE,KAAN,CAAY,gBAAZ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CADF,CADF;AAmBD;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMC,KAAK,GAAGD,KAAK,CAACE,eAApB;AACA,SAAOD,KAAP;AACD,CAHD;;AAIA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrCN,EAAAA,KAAK,EAAE,MAAMM,QAAQ,CAACV,OAAO,EAAR,CAAd;AACR,CAFD;;AAGA,eAAeF,OAAO,CAACO,eAAD,EAAkBI,kBAAkB,CAACR,GAAD,CAApC,CAAtB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux'\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { addUser } from './redux/action'\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <button onClick={props.user1(\"helooooooooooo\")}>click me</button>\n      </header>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  const users = state.userDataReducer;\n  return users;\n};\nconst mapDispatchToProps = dispatch => {\n  user1: () => dispatch(addUser())\n};\nexport default connect(mapStateToProps, mapDispatchToProps(App));\n"]},"metadata":{},"sourceType":"module"}